program ::= function+

function ::= 'function' <id> '(' params? ')' ':' typeid block

params ::= <id> ':' typeid (',' params)*

expr ::= block | assign

block ::= '{' exprs? '}'

exprs ::= expr (';' exprs)*

typeid ::= <id> ('[' <integer> ']')*

assign ::=
      lvalue ('=' assign)?
    | or_op

or_op ::= and_op ('||' and_op)*

and_op ::= eq_neq ('&&' eq_neq)*

eq_neq ::= cond (('=='|'!=') cond)*

cond ::= addsub (('<'|'>'|'<='|'>=') addsub)*

addsub ::= muldiv (('+'|'-') muldiv)*

muldiv ::= primary (('*'|'/') primary)*

primary ::=
      '-' primary
    | '!' primary
    | '(' expr ')'
    | def
    | if_else
    | while
    | fcall
    | array
    | literal
    | lvalue

def ::= 'let' <id> (':' typeid)? ('=' expr)?

if_else ::= 'if' expr block ('else' else_tail)?

else_tail ::=
      if_else
    | block

while ::= 'while' expr block

fcall ::= <id> '(' args? ')'

args ::= expr (',' expr)*

array ::= '[' expr (',' expr)* ']'

literal ::=
      <integer>
    | <float_number>
    | 'true'
    | 'false'
    | 'null'

lvalue ::= <id> ('[' expr ']')*
