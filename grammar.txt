program ::= functions

functions ::= function optfunctions

optfunctions ::= functions | <empty>

function ::= 'function' <id> '(' optparams ')' ':' <id> block

optparams ::= params | <empty>

params ::= <id> ':' <id> params_rest

params_rest ::=
      ',' params
    | <empty>

expr ::=
      block
    | def
    | assign
    | if
    | while
    | cond

block ::= '{' optexprs '}'

optexprs ::= exprs | <empty>

exprs ::= expr exprs_rest

exprs_rest ::=
      ';' exprs
    | ';'
    | <empty>

def ::= 'let' <id> ':' <id> '=' expr

assign ::= <id> '=' expr

if ::= 'if' '(' expr ')' expr
    
while ::= 'while' '(' expr ')' expr

fcall ::= <id> '(' optargs ')'

optargs ::= args | <empty>

args ::= expr args_rest

args_rest ::=
      ',' args
    | <empty>

cond ::= addsub cond_rest

cond_rest ::=
      '<' addsub cond_rest
    | '>' addsub cond_rest
    | '==' addsub cond_rest
    | '!=' addsub cond_rest
    | '<=' addsub cond_rest
    | '>=' addsub cond_rest
    | <empty>

addsub ::= muldiv addsub_rest

addsub_rest ::=
      '+' muldiv addsub_rest
    | '-' muldiv addsub_rest
    | <empty>

muldiv ::= factor muldiv_rest

muldiv_rest ::=
      '*' factor muldiv_rest
    | '/' factor muldiv_rest
    | <empty>

factor ::=
      fcall
    | <id>
    | <integer>
    | <float_number>
    | 'true'
    | 'false'
    | 'null'
    | '-' '(' expr ')'
    | '!' '(' expr ')'
    | '(' expr ')'
